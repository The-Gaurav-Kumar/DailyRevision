LCS
example :
a12 cdi cdj a29 bjf a13 bjf2 ZaC1                                        
cdi a12 cdj a13 a29 bjf 

output : 4
#include <bits/stdc++.h>
using namespace std;
using ll=long long;
ll lis(vector<ll> a) 
{
    ll n,INF,i,j,ans;
    n=a.size();
    INF=1e9;
    vector<int> d(n+1, INF);
    d[0]=-INF;
    for (i=0;i<n;i++) 
    {
        j=upper_bound(d.begin(), d.end(),a[i])-d.begin();
        if (d[j-1]<a[i] && a[i]<d[j])
        d[j] = a[i];
    }
    ans=0;
    for (i=0;i<=n;i++) 
    {
        if (d[i]<INF)
        ans=i;
    }
    return ans;
}
int main(void)
{
        for(i=0;i<n;i++)
        {
            cin>>s;
            a.push_back(s);
        }
        for(i=0;i<m;i++)
        {
            cin>>s;
            vp.push_back({s,i});
        }
        sort(vp.begin(),vp.end());
        for(auto x:vp)
        {
            b.push_back(x.first);
            pos.push_back(x.second);
        }
        for(i=0;i<n;i++)
        {
            if(binary_search(b.begin(),b.end(),a[i]))
            {
                k=pos[(lower_bound(b.begin(),b.end(),a[i])-b.begin())];
                common_project_pos.push_back(k);
            }
        }
        cout<<lis(common_project_pos)<<"\n";
    }
    return 0;
}
